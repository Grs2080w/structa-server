schema {
	query: Query
	mutation: Mutation
}

type Colaborators {
	id: ID!
	username: String
}

type Tasks {
	id: ID!
	name: String
	description: String
	created: String
	who_create: String
	status: String
	type: String
	assignee: String
	rating: Int
	tag: String
	priority: String
	completed_date: String
}

type WHOCREATEPROJECT {
	id: ID!
	username: String!
}

type Project {
	id: ID!
	name: String
	description: String
	created: String
	who_create: WHOCREATEPROJECT!
	status: String
	tasks: [Tasks]
	colaborators: [Colaborators]
	history: [String]
}

type User {
	id: ID!
	username: String
	name: String
	password: String
	first_login: String!
	project_closed_count: Int!
	project_open_count: Int!
	projects_aborted_count: Int!
	avatar_url: String
	projects: [String]
	notifications: [String]
	email: String
	otp: Boolean
	code_otp: String
}

type Token {
	data: String!
}

type StatusMessageProject {
	status: String!
}

type Query {
	users: [User]
	user(id: ID!): User!
	userCount: Int

	projects: [Project]
	project(id: ID!): Project!
	projectsCount: Int
}

type Mutation {
	createUser(name: String!, username: String!, password: String!): User!
	deleteUser: User!
	login(username: String!, password: String!): Token!
	clearNotifications: StatusMessageProject!
	updateAvatar(avatarUrl: String!): StatusMessageProject!
	changeEmailUser(email: String!): StatusMessageProject!
	turnOTPUser: StatusMessageProject!
	verifyOtp(otp: String!): Token!

	createProject(nameProject: String!, descriptionProject: String!): Project!
	deleteProject(idProject: String): StatusMessageProject!
	addCollaborator(idProject: String!, idColaborator: String!): StatusMessageProject!
	removeCollaborator(idProject: String!, idColaborator: String!): StatusMessageProject!
	closeProject(idProject: String): StatusMessageProject!

	addTask(idProject: String!, name: String!, description: String!, typeOfTask: String!, tag: String!, priority: String!): Tasks!
	deleteTask(idProject: String!, idTask: String!): StatusMessageProject!
	assignTask(idProject: String!, idTask: String!, idAssignee: String!): StatusMessageProject!
	updateTaskStatus(idProject: String!, idTask: String!, status: String!): StatusMessageProject!
	updateTaskRating(idProject: String!, idTask: String!, rating: Int!): StatusMessageProject!
}
